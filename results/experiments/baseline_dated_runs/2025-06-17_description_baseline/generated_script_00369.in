# LAMMPS input script for computing SNAP bispectrum descriptors in a BCC lattice

units metal
atom_style atomic
boundary p p p

# Define a custom BCC lattice with triclinic symmetry
lattice custom 2.86 a1 1.0 0.0 0.0 a2 0.5 0.86602540378 0.0 a3 0.5 0.28867513459 0.81649658093 &
        basis 0.0 0.0 0.0 basis 0.5 0.5 0.5

# Create a 3x2x1 supercell
region box block 0 3 0 2 0 1
create_box 1 box
create_atoms 1 box

# Define a zero potential to satisfy compute sna/atom
pair_style zero 5.0
pair_coeff * *

# Set up SNAP potential parameters
twojmax = 6
rcutfac = 4.67637
rfac0 = 0.99363

# Compute SNAP descriptors for individual atoms
compute sna_atom all sna/atom $twojmax rcutfac $rcutfac rfac0 $rfac0 bzeroflag 1

# Compute SNAP descriptors on a grid
compute sna_grid all snap/grid $twojmax rcutfac $rcutfac rfac0 $rfac0 bzeroflag 1 origin 0.0 0.0 0.0 &
    orient 1 0.5 0.0 0.0 orient 2 0.0 0.5 0.0 orient 3 0.0 0.0 0.5 &
    n 6 4 2

# Output descriptors for validation
dump 1 all custom 1 snap_atom.txt id type c_sna_atom[*]
dump 2 all custom 1 snap_grid.txt id type c_sna_grid[*]

# Run the simulation (static calculation)
run 0

# Calculate and output RMSE between atom-based and grid-based bispectrum components
variable rmse equal sqrt(sum((c_sna_atom[*] - c_sna_grid[*])^2)/count(c_sna_atom[*]))
print "Root Mean Square Error (RMSE) between atom-based and grid-based SNAP descriptors: ${rmse}"

# Clean up
undump 1
undump 2

This script sets up a 3x2x1 supercell of a BCC lattice with a SNAP potential, computes bispectrum descriptors both per atom and on a grid, and calculates the RMSE for validation. The results are output to files for further analysis.