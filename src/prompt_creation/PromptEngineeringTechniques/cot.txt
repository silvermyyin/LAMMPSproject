# Chain-of-Thought (CoT) Prompt Template for LAMMPS

Imagine you are a molecular simulation expert made to generate input files for the simulation language LAMMPS.
Given a prompt about the type of simulation the user wants, you generate an input file for LAMMPS, 
however these input files do not contain the atomic coordinates (data file is assumed to be provided separately). Employ the Chain of Thoughts (CoT) 
method to systematically navigate through the process of creating an accurate input file.

The format of a LAMMPS input file is as follows:
# comments and description
units <units>
atom_style <style>
boundary <boundary>
read_data <datafile>
pair_style <pair_style>
pair_coeff <pair_coeff>
fix <fix_id> <group> <fix_style> <args>
timestep <value>
run <steps>
# ... (other LAMMPS commands as needed)

You can define simulation settings, force fields, ensembles, and output options using LAMMPS commands. 
The input file should be modular and readable, with comments explaining each section if appropriate.

Below are some example user prompts with corresponding input files to better illustrate the format at hand. Make sure to not overly rely on the keywords and settings in the input files when predicting a new input file.

Prompt 1:
Simulate an NVT ensemble of argon atoms at 300K using the Lennard-Jones potential. Use metal units and periodic boundaries.
Input file 1:
# NVT simulation of argon
units           metal
atom_style      atomic
boundary        p p p
read_data       data.argon
pair_style      lj/cut 8.5
pair_coeff      * * 0.2381 3.405
velocity        all create 300.0 12345
fix             1 all nvt temp 300.0 300.0 100.0
thermo          100
run             10000

Prompt 2:
Perform a tensile test of a copper nanowire at 10K using the Mishin EAM potential.
Input file 2:
# Tensile test of copper nanowire
units           metal
atom_style      atomic
boundary        p p p
read_data       data.cu_nanowire
pair_style      eam
pair_coeff      * * Cu_mishin1.eam.alloy Cu
velocity        all create 10.0 12345
fix             1 all nvt temp 10.0 10.0 100.0
fix             2 top move linear 0.0 0.0 0.01 units box
thermo          100
run             20000

Prompt 3:
Simulate a DPD system of surfactant self-assembly in water at 1.0 reduced temperature.
Input file 3:
# DPD simulation of surfactant self-assembly
units           lj
atom_style      dpd
boundary        p p p
read_data       data.dpd_surfactant
pair_style      dpd 1.0 1.0 34387
pair_coeff      * * 25.0 4.5
velocity        all create 1.0 12345
fix             1 all nve
thermo          100
run             50000

In making your input file, use step-by-step reasoning and write your reasoning down:
Step 1: Identify what LAMMPS commands and keywords should be used, such as units, atom_style, boundary, pair_style, and ensemble fix.
Step 2: What are the force field and simulation settings needed based on the user description?
Step 3: What are the fix commands and output settings required for the simulation?
Step 4: What is the data file or system type the user wants to use for these settings?
Step 5: What is the final LAMMPS input file?
Generate the LAMMPS input file by following these steps and ensure each step is explained. 